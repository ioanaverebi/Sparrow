/**
 * generated by Xtext 2.10.0
 */
package org.refactor.modelEditor;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Method</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.refactor.modelEditor.Method#getModifier <em>Modifier</em>}</li>
 *   <li>{@link org.refactor.modelEditor.Method#getName <em>Name</em>}</li>
 *   <li>{@link org.refactor.modelEditor.Method#getTypes <em>Types</em>}</li>
 *   <li>{@link org.refactor.modelEditor.Method#getType <em>Type</em>}</li>
 *   <li>{@link org.refactor.modelEditor.Method#getLoc <em>Loc</em>}</li>
 *   <li>{@link org.refactor.modelEditor.Method#getCyclo <em>Cyclo</em>}</li>
 *   <li>{@link org.refactor.modelEditor.Method#getAccesses <em>Accesses</em>}</li>
 *   <li>{@link org.refactor.modelEditor.Method#getCalls <em>Calls</em>}</li>
 * </ul>
 *
 * @see org.refactor.modelEditor.ModelEditorPackage#getMethod()
 * @model
 * @generated
 */
public interface Method extends EObject
{
  /**
   * Returns the value of the '<em><b>Modifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Modifier</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Modifier</em>' attribute.
   * @see #setModifier(String)
   * @see org.refactor.modelEditor.ModelEditorPackage#getMethod_Modifier()
   * @model
   * @generated
   */
  String getModifier();

  /**
   * Sets the value of the '{@link org.refactor.modelEditor.Method#getModifier <em>Modifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Modifier</em>' attribute.
   * @see #getModifier()
   * @generated
   */
  void setModifier(String value);

  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see org.refactor.modelEditor.ModelEditorPackage#getMethod_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link org.refactor.modelEditor.Method#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Types</b></em>' reference list.
   * The list contents are of type {@link org.refactor.modelEditor.Class}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Types</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Types</em>' reference list.
   * @see org.refactor.modelEditor.ModelEditorPackage#getMethod_Types()
   * @model
   * @generated
   */
  EList<org.refactor.modelEditor.Class> getTypes();

  /**
   * Returns the value of the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type</em>' reference.
   * @see #setType(org.refactor.modelEditor.Class)
   * @see org.refactor.modelEditor.ModelEditorPackage#getMethod_Type()
   * @model
   * @generated
   */
  org.refactor.modelEditor.Class getType();

  /**
   * Sets the value of the '{@link org.refactor.modelEditor.Method#getType <em>Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type</em>' reference.
   * @see #getType()
   * @generated
   */
  void setType(org.refactor.modelEditor.Class value);

  /**
   * Returns the value of the '<em><b>Loc</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Loc</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Loc</em>' attribute.
   * @see #setLoc(int)
   * @see org.refactor.modelEditor.ModelEditorPackage#getMethod_Loc()
   * @model
   * @generated
   */
  int getLoc();

  /**
   * Sets the value of the '{@link org.refactor.modelEditor.Method#getLoc <em>Loc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Loc</em>' attribute.
   * @see #getLoc()
   * @generated
   */
  void setLoc(int value);

  /**
   * Returns the value of the '<em><b>Cyclo</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Cyclo</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Cyclo</em>' attribute.
   * @see #setCyclo(int)
   * @see org.refactor.modelEditor.ModelEditorPackage#getMethod_Cyclo()
   * @model
   * @generated
   */
  int getCyclo();

  /**
   * Sets the value of the '{@link org.refactor.modelEditor.Method#getCyclo <em>Cyclo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Cyclo</em>' attribute.
   * @see #getCyclo()
   * @generated
   */
  void setCyclo(int value);

  /**
   * Returns the value of the '<em><b>Accesses</b></em>' containment reference list.
   * The list contents are of type {@link org.refactor.modelEditor.Access}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Accesses</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Accesses</em>' containment reference list.
   * @see org.refactor.modelEditor.ModelEditorPackage#getMethod_Accesses()
   * @model containment="true"
   * @generated
   */
  EList<Access> getAccesses();

  /**
   * Returns the value of the '<em><b>Calls</b></em>' containment reference list.
   * The list contents are of type {@link org.refactor.modelEditor.Call}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Calls</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Calls</em>' containment reference list.
   * @see org.refactor.modelEditor.ModelEditorPackage#getMethod_Calls()
   * @model containment="true"
   * @generated
   */
  EList<Call> getCalls();

} // Method
