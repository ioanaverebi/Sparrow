/**
 * generated by Xtext 2.10.0
 */
package org.refactor.modelEditor.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.refactor.modelEditor.Access;
import org.refactor.modelEditor.Call;
import org.refactor.modelEditor.Field;
import org.refactor.modelEditor.Import;
import org.refactor.modelEditor.Method;
import org.refactor.modelEditor.Model;
import org.refactor.modelEditor.ModelEditorFactory;
import org.refactor.modelEditor.ModelEditorPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ModelEditorFactoryImpl extends EFactoryImpl implements ModelEditorFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ModelEditorFactory init()
  {
    try
    {
      ModelEditorFactory theModelEditorFactory = (ModelEditorFactory)EPackage.Registry.INSTANCE.getEFactory(ModelEditorPackage.eNS_URI);
      if (theModelEditorFactory != null)
      {
        return theModelEditorFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ModelEditorFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModelEditorFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ModelEditorPackage.MODEL: return createModel();
      case ModelEditorPackage.IMPORT: return createImport();
      case ModelEditorPackage.CLASS: return createClass();
      case ModelEditorPackage.FIELD: return createField();
      case ModelEditorPackage.METHOD: return createMethod();
      case ModelEditorPackage.ACCESS: return createAccess();
      case ModelEditorPackage.CALL: return createCall();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Import createImport()
  {
    ImportImpl import_ = new ImportImpl();
    return import_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.refactor.modelEditor.Class createClass()
  {
    ClassImpl class_ = new ClassImpl();
    return class_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Field createField()
  {
    FieldImpl field = new FieldImpl();
    return field;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Method createMethod()
  {
    MethodImpl method = new MethodImpl();
    return method;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Access createAccess()
  {
    AccessImpl access = new AccessImpl();
    return access;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Call createCall()
  {
    CallImpl call = new CallImpl();
    return call;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModelEditorPackage getModelEditorPackage()
  {
    return (ModelEditorPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ModelEditorPackage getPackage()
  {
    return ModelEditorPackage.eINSTANCE;
  }

} //ModelEditorFactoryImpl
